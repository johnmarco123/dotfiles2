#/usr/bin/env bash
#script_dir="$(dirname "$(realpath "$0")")"
script_dir="$HOME"
file_name=".tmux-sessionizer.txt"
full_path="$script_dir/$file_name" 

# create the tmux-sessionizer list file if it does not exist
if [[ ! -e "$full_path" ]]; then
    touch "$full_path"
fi

## any commands you want to run every time. Note that these commands will
## significantly slow down tmux-sessionizer as we must check if each directory
## exists prior to adding it
#commands=(
#    #example command, add all directories from your home always.
#    #"find $HOME -maxdepth 1 -type d"
#    #"find / -maxdepth 1 -type d"
#);
#
#
#combined_results=""
#
## Gather the results of all the commands and put it into one file
#for cmd in "${commands[@]}"; do 
#    combined_results+=$(eval "$cmd" | tr '\n' '')
#done
#
#if [[ -n "$combined_results" ]]; then
#    # Combine temp file and the tmux-sessionizer file and remove any duplicates
#    {
#        echo "$combined_results"
#            cat "$full_path"
#    } | sort -u > "$full_path.tmp"
#
#    if [[ -f "$full_path.tmp" ]]; then
#    mv "$full_path.tmp" "$full_path"
#    fi;
#fi


#adding, deleting or listing the tmux-sessionizer list
if [[ $# -eq 1 ]]; then

    # add a path to our tmux save file, this accepts stdin and also prevents
    # duplicates
    if [[ $1 == -add || $1 == -a ]]; then
        while read line; do
            # remove trailing slashes before comparing
            line="${line%/}"
            # ensure that the filepath is absolute and it exists
            if [[ -d $line && "$line" = /* ]]; then
                if ! grep -qFx $line $full_path ; then
                    echo "$line" >> $full_path
                fi
            fi
        done < "${2:-/dev/stdin}"

    # delete a path from our tmux save file. You can select multiple files to
    # delete using the tab key in fzf to select multiple
    elif [[ $1 == -delete || $1 == -d ]]; then
        while true; do
            selected=$(cat "$full_path" | fzf -m)

            if [[ -z "$selected" ]]; then
                exit 0
            fi

            count=$(echo "$selected" | wc -l)

            if [[ $count -gt 0 ]]; then
                temp_file=$(mktemp)
                grep -v -F -x -e "$selected" "$full_path" > "$temp_file"
                mv "$temp_file" "$full_path"
                rm $temp_file
            fi
        done
    elif [[ $1 == -list || $1 == -l ]]; then
        cat $full_path
    fi
    exit 0
fi
# regular usage of tmux-sessionizer past this point


# remove any directories in the tmux-sessionizer list that no longer exist
valid_paths=$(mktemp)
while read -r line; do
    if [[ -d "$line" ]]; then
        echo "$line" >> $valid_paths
    fi
done < "$full_path"
mv "$valid_paths" "$full_path"


# switching tmux to the files
switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    # list all filepaths in the tmux-sessionizer list as well as any filepaths
    # generated by commands
    selected=$(cat $full_path | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $selected_name -c $selected
    hydrate $selected_name $selected
    exit 0
fi

if ! has_session $selected_name; then
    tmux new-session -ds $selected_name -c $selected
    hydrate $selected_name $selected
fi

switch_to $selected_name
